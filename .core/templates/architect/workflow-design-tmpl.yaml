# Physics Workflow Design Template

# Meta Information
template_name: "workflow-design-template"
version: "1.0.0"
created_date: "2025-01-19"
purpose: "Systematic framework for designing efficient, effective physics research workflows"
korean_philosophy: "좋은 워크플로우는 자연스럽게 흐르는 물과 같다" # Good workflow flows like natural water

# Template Configuration
workflow_design:
  # Workflow Metadata
  workflow_info:
    workflow_name: ""         # Descriptive workflow name
    workflow_purpose: ""      # Primary objective of workflow
    physics_domain: ""        # Relevant physics research area
    complexity_level: ""      # "simple", "moderate", "complex", "advanced"
    expected_duration: ""     # Estimated workflow completion time
    
  # Stakeholder Analysis
  stakeholder_framework:
    primary_participants: []  # Main workflow participants
    supporting_roles: []      # Additional support roles
    external_dependencies: [] # Outside organizations/systems
    decision_authorities: []  # Who makes key decisions
    
  # Workflow Structure Design
  workflow_architecture:
    phase_organization:
      discovery_phase:
        objectives: []        # Discovery goals and outcomes
        activities: []        # Specific discovery activities
        deliverables: []      # Expected outputs
        quality_gates: []     # Validation checkpoints
        
      design_phase:
        objectives: []        # Design goals and frameworks
        activities: []        # Design development activities
        deliverables: []      # Design specifications
        quality_gates: []     # Design validation points
        
      implementation_phase:
        objectives: []        # Implementation goals
        activities: []        # Execution activities
        deliverables: []      # Implementation outputs
        quality_gates: []     # Implementation validation
        
      validation_phase:
        objectives: []        # Validation goals
        activities: []        # Verification activities
        deliverables: []      # Validation reports
        quality_gates: []     # Acceptance criteria
    
    activity_sequencing:
      sequential_activities: [] # Must be done in order
      parallel_opportunities: [] # Can be done simultaneously
      conditional_branches: [] # Decision-dependent paths
      iteration_cycles: []    # Repetitive improvement loops

  # Resource Allocation Framework
  resource_planning:
    human_resource_allocation:
      role_assignments: {}    # Who does what tasks
      time_commitments: {}    # Time allocation per role
      skill_requirements: {}  # Required expertise per task
      backup_assignments: {}  # Contingency role coverage
      
    infrastructure_requirements:
      computational_resources: [] # Computing needs
      experimental_equipment: []  # Laboratory requirements
      software_tools: []          # Application needs
      facility_requirements: []   # Physical space needs
      
    timeline_coordination:
      milestone_schedule: {}  # Key milestone dates
      dependency_timing: {}   # Task dependency scheduling
      buffer_allocation: {}   # Time contingency planning
      critical_path: []       # Most time-sensitive sequence

  # Quality Framework Integration
  quality_assurance:
    quality_standards:
      accuracy_requirements: [] # Precision and correctness standards
      completeness_criteria: [] # Thoroughness expectations
      timeliness_targets: []    # Schedule adherence goals
      stakeholder_satisfaction: [] # Success measures
      
    validation_checkpoints:
      stage_gate_criteria: {}  # Progression requirements
      review_processes: []     # Evaluation procedures
      approval_authorities: [] # Who validates each stage
      escalation_procedures: [] # Problem resolution paths

# Technology Integration Framework
technology_integration:
  workflow_automation:
    automated_processes: []   # Tasks suitable for automation
    human_oversight_points: [] # Where human judgment needed
    integration_protocols: [] # System connectivity requirements
    monitoring_systems: []    # Performance tracking tools
    
  collaboration_platforms:
    communication_tools: []   # Team coordination platforms
    document_sharing: []      # File management systems  
    project_management: []    # Task tracking applications
    decision_support: []      # Analytics and reporting tools

# Performance Optimization
workflow_optimization:
  efficiency_measures:
    cycle_time_targets: {}    # Speed objectives
    throughput_goals: {}      # Volume processing targets
    resource_utilization: {}  # Efficiency expectations
    quality_metrics: {}       # Excellence indicators
    
  continuous_improvement:
    feedback_mechanisms: []   # Input collection methods
    performance_monitoring: [] # Tracking and measurement
    optimization_cycles: []   # Regular improvement processes
    innovation_integration: [] # New method adoption

# Risk Management Framework
risk_management:
  risk_identification:
    technical_risks: []       # Technology failure possibilities
    resource_risks: []        # Availability and capacity risks
    schedule_risks: []        # Timeline threat assessment
    quality_risks: []         # Standards achievement risks
    
  mitigation_strategies:
    preventive_measures: []   # Risk prevention approaches
    contingency_plans: []     # Response strategies
    monitoring_systems: []    # Early warning indicators
    recovery_procedures: []   # Restoration protocols

# Success Metrics and Evaluation
evaluation_framework:
  success_indicators:
    quantitative_metrics: []  # Measurable success factors
    qualitative_measures: []  # Subjective success indicators
    stakeholder_satisfaction: [] # External success validation
    learning_outcomes: []     # Knowledge and capability gain
    
  performance_assessment:
    efficiency_evaluation: []  # Speed and resource measures
    effectiveness_assessment: [] # Goal achievement evaluation
    quality_verification: []   # Standards compliance check
    innovation_impact: []      # Creativity and breakthrough measurement

# Example Workflow Design
example_workflow:
  workflow_info:
    workflow_name: "Quantum Mechanics Research Investigation"
    workflow_purpose: "Systematic investigation of quantum phenomena"
    physics_domain: "quantum_mechanics"
    expected_duration: "6_months"
    
  workflow_architecture:
    phase_organization:
      discovery_phase:
        objectives: ["Identify quantum phenomena patterns", "Generate testable hypotheses"]
        activities: ["Literature review", "Theoretical analysis", "Experimental design"]
        deliverables: ["Discovery report", "Hypothesis list", "Experimental protocol"]

# System Integration Metadata
system_integration:
  template_dependencies: ["system-architecture", "integration-plan", "resource-optimization"]
  required_data: ["workflow-patterns", "design-patterns-library", "scalability-principles"]
  output_compatibility: ["project_plans", "workflow_specifications", "coordination_protocols"]
  maintenance_schedule: "workflow_effectiveness_review_monthly"